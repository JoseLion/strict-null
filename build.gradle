buildscript {
  configurations.classpath {
    resolutionStrategy.activateDependencyLocking()
  }
}

plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'

  id 'io.codearte.nexus-staging' version '0.22.0'
  id 'com.github.joselion.pretty-jupiter' version '1.3.2'
}

def snapshotSuffix = '-SNAPSHOT'
def isRelease = project.hasProperty('releaseVersion')
def suffix = isRelease ? '' : snapshotSuffix

group = 'com.github.joselion'
version = "0.0.3${suffix}"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

java {
  withJavadocJar()
  withSourcesJar()
}

javadoc {
  if(JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }

  options.addStringOption('Xwerror', '-quiet')
}

repositories {
  jcenter()
  mavenCentral()
}

dependencyLocking {
  lockAllConfigurations()
}

dependencies {
  api('com.google.code.findbugs:jsr305:3.0.2')

  testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.2')
  testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
}

tasks.named('test') {
  useJUnitPlatform()
}

jar {
  manifest {
    attributes(
      'Implementation-Title': project.name,
      'Implementation-Version': project.version
    )
  }
}

tasks.withType(Javadoc) {
  options.addStringOption('Xwerror', '-quiet')
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      pom {
        name = 'strict-null'
        packaging = 'jar'
        description = 'Strict null annotations for Java'
        url = 'https://github.com/JoseLion/strict-null'

        scm {
          connection = 'scm:git:https://github.com/JoseLion/strict-null.git'
          developerConnection = 'scm:git:ssh://github.com/JoseLion/strict-null.git'
          url = 'https://github.com/JoseLion/strict-null'
        }

        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id = 'JoseLion'
            name = "Jose Luis Leon"
            email = 'joseluis5000l@gmail.com'
          }
        }
      }
    }
  }

  repositories {
    maven {
      def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
      def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'

      url = version.endsWith(snapshotSuffix) ? snapshotsRepoUrl : releasesRepoUrl
      credentials(PasswordCredentials) {
        username = ossrhUsername
        password = ossrhPassword
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}

nexusStaging {
  username = ossrhUsername
  password = ossrhPassword
}
